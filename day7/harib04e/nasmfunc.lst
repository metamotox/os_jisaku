     1                                  ; nasmfunc
     2                                  ; TAB=4
     3                                  
     4                                  ; [FORMAT "WCOFF"]		; the mode creating object file
     5                                  [BITS 32]			; 32 bit mode machine code
     6                                  
     7                                  ; information for object file
     8                                  
     9                                  ; [FILE "nasmfunc.nas"]		; source file information
    10                                  
    11                                  	global	io_hlt		; function name that contains this program
    12                                  	global	io_cli
    13                                  	global	io_sti
    14                                  	global	io_stihlt
    15                                  	global	io_in8
    16                                  	global	io_in16
    17                                  	global	io_in32
    18                                  	global	io_out8
    19                                  	global	io_out16
    20                                  	global	io_out32
    21                                  	global	io_load_eflags
    22                                  	global	io_store_eflags
    23                                  	global	load_gdtr
    24                                  	global	load_idtr
    25                                  	global 	asm_inthandler21
    26                                  	global	asm_inthandler27
    27                                  	global 	asm_inthandler2c
    28                                  
    29                                  	extern	inthandler21
    30                                  	extern	inthandler27
    31                                  	extern	inthandler2c
    32                                  
    33                                  ; program in the io_hlt
    34                                  
    35                                  section .text			; write this description at first
    36                                  
    37                                  io_hlt:				; void io_hlt(void)
    38 00000000 F4                      	HLT
    39 00000001 C3                      	RET
    40                                  
    41                                  io_cli:				; void io_cli(void)
    42 00000002 FA                      	CLI			; clear interrupt flag
    43 00000003 C3                      	RET
    44                                  
    45                                  io_sti:				; void io_sti(void)
    46 00000004 FB                      	STI			; set IF flag 1
    47 00000005 C3                      	RET
    48                                  
    49                                  io_stihlt:			; void io_stihlt(void)
    50 00000006 FB                      	STI			; set IF flag included EFLAGS 1
    51 00000007 F4                      	HLT
    52 00000008 C3                      	RET
    53                                  
    54                                  io_in8:				; int io_in8(int port)
    55 00000009 8B542404                	MOV	EDX,[ESP+4]	; [ESP+4] is arg1
    56 0000000D B800000000              	MOV	EAX,0
    57 00000012 EC                      	IN	AL,DX
    58 00000013 C3                      	RET
    59                                  
    60                                  
    61                                  io_in16:			; int io_in16(int port)
    62 00000014 8B542404                	MOV	EDX,[ESP+4]
    63 00000018 B800000000              	MOV	EAX,0
    64 0000001D 66ED                    	IN	AX,DX
    65 0000001F C3                      	RET
    66                                  
    67                                  io_in32:			; int io_in32(int port)
    68 00000020 8B542404                	MOV	EDX,[ESP+4]	; [ESP+4] is argument(port)
    69 00000024 ED                      	IN	EAX,DX
    70 00000025 C3                      	RET
    71                                  
    72                                  io_out8:			; void io_out8(int port, int data)
    73 00000026 8B542404                	MOV	EDX,[ESP+4]	; [ESP+4] is argument(port)
    74 0000002A 8A442408                	MOV	AL,[ESP+8]	; [ESP+8] is argument(data)
    75 0000002E EE                      	OUT	DX,AL
    76 0000002F C3                      	RET
    77                                  
    78                                  io_out16:			; void io_out16(int port, int data)
    79 00000030 8B542404                	MOV	EDX,[ESP+4]
    80 00000034 8B442408                	MOV	EAX,[ESP+8]
    81 00000038 66EF                    	OUT	DX,AX
    82 0000003A C3                      	RET
    83                                  
    84                                  io_out32:			; void io_out32(int port, int data)
    85 0000003B 8B542404                	MOV	EDX,[ESP+4]
    86 0000003F 8B442408                	MOV	EAX,[ESP+8]
    87 00000043 EF                      	OUT	DX,EAX
    88 00000044 C3                      	RET
    89                                  
    90                                  io_load_eflags:			; int io_load_eflags(void);
    91 00000045 9C                      	PUSHFD			; it is equals to PUSH EFLAGS
    92 00000046 58                      	POP	EAX
    93 00000047 C3                      	RET
    94                                  
    95                                  io_store_eflags:		; void io_store_eflags(int eflags);
    96 00000048 8B442404                	MOV	EAX,[ESP+4]
    97 0000004C 50                      	PUSH	EAX
    98 0000004D 9D                      	POPFD			; it is equals to POP EFLAGS
    99 0000004E C3                      	RET
   100                                  
   101                                  load_gdtr:
   102 0000004F 668B442404              	MOV	AX,[ESP+4]
   103 00000054 6689442406              	MOV	[ESP+6], AX
   104 00000059 0F01542406              	LGDT	[ESP+6]
   105 0000005E C3                      	RET
   106                                  
   107                                  load_idtr:
   108 0000005F 668B442404              	MOV	AX,[ESP+4]
   109 00000064 6689442406              	MOV	[ESP+6], AX
   110 00000069 0F015C2406              	LIDT	[ESP+6]
   111 0000006E C3                      	RET
   112                                  
   113                                  asm_inthandler21:
   114 0000006F 06                      	PUSH	ES
   115 00000070 1E                      	PUSH	DS
   116 00000071 60                      	PUSHAD
   117 00000072 89E0                    	MOV	EAX,ESP
   118 00000074 50                      	PUSH	EAX
   119 00000075 668CD0                  	MOV	AX,SS
   120 00000078 8ED8                    	MOV	DS,AX
   121 0000007A 8EC0                    	MOV	ES,AX
   122 0000007C E8(00000000)            	CALL	inthandler21
   123 00000081 58                      	POP	EAX
   124 00000082 61                      	POPAD
   125 00000083 1F                      	POP	DS
   126 00000084 07                      	POP	ES
   127 00000085 CF                      	IRETD
   128                                  
   129                                  asm_inthandler27:
   130 00000086 06                      	PUSH	ES
   131 00000087 1E                      	PUSH	DS
   132 00000088 60                      	PUSHAD
   133 00000089 89E0                    	MOV	EAX,ESP
   134 0000008B 50                      	PUSH	EAX
   135 0000008C 668CD0                  	MOV	AX,SS
   136 0000008F 8ED8                    	MOV	DS,AX
   137 00000091 8EC0                    	MOV	ES,AX
   138 00000093 E8(00000000)            	CALL	inthandler27
   139 00000098 58                      	POP	EAX
   140 00000099 61                      	POPAD
   141 0000009A 1F                      	POP	DS
   142 0000009B 07                      	POP	ES
   143 0000009C CF                      	IRETD
   144                                  
   145                                  asm_inthandler2c:
   146 0000009D 06                      	PUSH	ES
   147 0000009E 1E                      	PUSH	DS
   148 0000009F 60                      	PUSHAD
   149 000000A0 89E0                    	MOV	EAX,ESP
   150 000000A2 50                      	PUSH	EAX
   151 000000A3 668CD0                  	MOV	AX,SS
   152 000000A6 8ED8                    	MOV	DS,AX
   153 000000A8 8EC0                    	MOV	ES,AX
   154 000000AA E8(00000000)            	CALL	inthandler2c
   155 000000AF 58                      	POP	EAX
   156 000000B0 61                      	POPAD
   157 000000B1 1F                      	POP	DS
   158 000000B2 07                      	POP	ES
   159 000000B3 CF                      	IRETD
