     1                                  ; nasmfunc
     2                                  ; TAB=4
     3                                  
     4                                  ; [FORMAT "WCOFF"]		; the mode creating object file
     5                                  [BITS 32]			; 32 bit mode machine code
     6                                  
     7                                  ; information for object file
     8                                  
     9                                  ; [FILE "nasmfunc.nas"]		; source file information
    10                                  
    11                                  	GLOBAL	io_hlt		; function name that contains this program
    12                                  	GLOBAL	io_cli
    13                                  	GLOBAL	io_sti
    14                                  	GLOBAL	io_stihlt
    15                                  	GLOBAL	io_in8
    16                                  	GLOBAL	io_in16
    17                                  	GLOBAL	io_in32
    18                                  	GLOBAL	io_out8
    19                                  	GLOBAL	io_out16
    20                                  	GLOBAL	io_out32
    21                                  	GLOBAL	io_load_eflags
    22                                  	GLOBAL	io_store_eflags
    23                                  	GLOBAL	load_gdtr
    24                                  	GLOBAL	load_idtr
    25                                  
    26                                  ; program in the io_hlt
    27                                  
    28                                  section .text			; write this description at first
    29                                  
    30                                  io_hlt:				; void io_hlt(void)
    31 00000000 F4                      	HLT
    32 00000001 C3                      	RET
    33                                  
    34                                  io_cli:				; void io_cli(void)
    35 00000002 FA                      	CLI
    36 00000003 C3                      	RET
    37                                  
    38                                  io_sti:				; void io_sti(void)
    39 00000004 FB                      	STI
    40 00000005 C3                      	RET
    41                                  
    42                                  io_stihlt:			; void io_stihlt(void)
    43 00000006 FB                      	STI
    44 00000007 F4                      	HLT
    45 00000008 C3                      	RET
    46                                  
    47                                  io_in8:				; int io_in8(int port)
    48 00000009 8B542404                	MOV	EDX,[ESP+4]	; [ESP+4] is arg1
    49 0000000D B800000000              	MOV	EAX,0
    50 00000012 EC                      	IN	AL,DX
    51 00000013 C3                      	RET
    52                                  
    53                                  
    54                                  io_in16:			; int io_in16(int port)
    55 00000014 8B542404                	MOV	EDX,[ESP+4]
    56 00000018 B800000000              	MOV	EAX,0
    57 0000001D 66ED                    	IN	AX,DX
    58 0000001F C3                      	RET
    59                                  
    60                                  io_in32:			; int io_in32(int port)
    61 00000020 8B542404                	MOV	EDX,[ESP+4]
    62 00000024 ED                      	IN	EAX,DX
    63 00000025 C3                      	RET
    64                                  
    65                                  io_out8:			; void io_out8(int port, int data)
    66 00000026 8B542404                	MOV	EDX,[ESP+4]
    67 0000002A 8A442408                	MOV	AL,[ESP+8]
    68 0000002E EE                      	OUT	DX,AL
    69 0000002F C3                      	RET
    70                                  
    71                                  io_out16:			; void io_out16(int port, int data)
    72 00000030 8B542404                	MOV	EDX,[ESP+4]
    73 00000034 8B442408                	MOV	EAX,[ESP+8]
    74 00000038 66EF                    	OUT	DX,AX
    75 0000003A C3                      	RET
    76                                  
    77                                  io_out32:			; void io_out32(int port, int data)
    78 0000003B 8B542404                	MOV	EDX,[ESP+4]
    79 0000003F 8B442408                	MOV	EAX,[ESP+8]
    80 00000043 EF                      	OUT	DX,EAX
    81 00000044 C3                      	RET
    82                                  
    83                                  io_load_eflags:			; int io_load_eflags(void);
    84 00000045 9C                      	PUSHFD			; it is equals to PUSH EFLAGS
    85 00000046 58                      	POP	EAX
    86 00000047 C3                      	RET
    87                                  
    88                                  io_store_eflags:		; void io_store_eflags(int eflags);
    89 00000048 8B442404                	MOV	EAX,[ESP+4]
    90 0000004C 50                      	PUSH	EAX
    91 0000004D 9D                      	POPFD			; it is equals to POP EFLAGS
    92 0000004E C3                      	RET
    93                                  
    94                                  load_gdtr:
    95 0000004F 668B442404              	MOV	AX,[ESP+4]
    96 00000054 6689442406              	MOV	[ESP+6], AX
    97 00000059 0F01542406              	LGDT	[ESP+6]
    98 0000005E C3                      	RET
    99                                  
   100                                  load_idtr:
   101 0000005F 668B442404              	MOV	AX,[ESP+4]
   102 00000064 6689442406              	MOV	[ESP+6], AX
   103 00000069 0F015C2406              	LIDT	[ESP+6]
   104 0000006E C3                      	RET
