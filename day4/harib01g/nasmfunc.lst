     1                                  ; nasmfunc
     2                                  ; TAB=4
     3                                  
     4                                  ; [FORMAT "WCOFF"]		; the mode creating object file
     5                                  [BITS 32]			; 32 bit mode machine code
     6                                  
     7                                  ; information for object file
     8                                  
     9                                  ; [FILE "nasmfunc.nas"]		; source file information
    10                                  
    11                                  	GLOBAL	io_hlt		; function name that contains this program
    12                                  	GLOBAL	io_cli
    13                                  	GLOBAL	io_sti
    14                                  	GLOBAL	io_stihlt
    15                                  	GLOBAL	io_in8
    16                                  	GLOBAL	io_in16
    17                                  	GLOBAL	io_in32
    18                                  	GLOBAL	io_out8
    19                                  	GLOBAL	io_out16
    20                                  	GLOBAL	io_out32
    21                                  	GLOBAL	io_load_eflags
    22                                  	GLOBAL	io_store_eflags
    23                                  
    24                                  ; program in the io_hlt
    25                                  
    26                                  section .text			; write this description at first
    27                                  
    28                                  io_hlt:				; void io_hlt(void)
    29 00000000 F4                      	HLT
    30 00000001 C3                      	RET
    31                                  
    32                                  io_cli:				; void io_cli(void)
    33 00000002 FA                      	CLI
    34 00000003 C3                      	RET
    35                                  
    36                                  io_sti:				; void io_sti(void)
    37 00000004 FB                      	STI
    38 00000005 C3                      	RET
    39                                  
    40                                  io_stihlt:			; void io_stihlt(void)
    41 00000006 FB                      	STI
    42 00000007 F4                      	HLT
    43 00000008 C3                      	RET
    44                                  
    45                                  io_in8:				; int io_in8(int port)
    46 00000009 8B542404                	MOV	EDX,[ESP+4]	; [ESP+4] is arg1
    47 0000000D B800000000              	MOV	EAX,0
    48 00000012 EC                      	IN	AL,DX
    49 00000013 C3                      	RET
    50                                  
    51                                  
    52                                  io_in16:			; int io_in16(int port)
    53 00000014 8B542404                	MOV	EDX,[ESP+4]
    54 00000018 B800000000              	MOV	EAX,0
    55 0000001D 66ED                    	IN	AX,DX
    56 0000001F C3                      	RET
    57                                  
    58                                  io_in32:			; int io_in32(int port)
    59 00000020 8B542404                	MOV	EDX,[ESP+4]
    60 00000024 ED                      	IN	EAX,DX
    61 00000025 C3                      	RET
    62                                  
    63                                  io_out8:			; void io_out8(int port, int data)
    64 00000026 8B542404                	MOV	EDX,[ESP+4]
    65 0000002A 8A442408                	MOV	AL,[ESP+8]
    66 0000002E EE                      	OUT	DX,AL
    67 0000002F C3                      	RET
    68                                  
    69                                  io_out16:			; void io_out16(int port, int data)
    70 00000030 8B542404                	MOV	EDX,[ESP+4]
    71 00000034 8B442408                	MOV	EAX,[ESP+8]
    72 00000038 66EF                    	OUT	DX,AX
    73 0000003A C3                      	RET
    74                                  
    75                                  io_out32:			; void io_out32(int port, int data)
    76 0000003B 8B542404                	MOV	EDX,[ESP+4]
    77 0000003F 8B442408                	MOV	EAX,[ESP+8]
    78 00000043 EF                      	OUT	DX,EAX
    79 00000044 C3                      	RET
    80                                  
    81                                  io_load_eflags:			; int io_load_eflags(void);
    82 00000045 9C                      	PUSHFD			; it is equals to PUSH EFLAGS
    83 00000046 58                      	POP	EAX
    84 00000047 C3                      	RET
    85                                  
    86                                  io_store_eflags:		; void io_store_eflags(int eflags);
    87 00000048 8B442404                	MOV	EAX,[ESP+4]
    88 0000004C 50                      	PUSH	EAX
    89 0000004D 9D                      	POPFD			; it is equals to POP EFLAGS
    90 0000004E C3                      	RET
    91                                  
